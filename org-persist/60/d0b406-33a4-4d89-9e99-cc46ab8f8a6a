(((elisp org-element--headline-cache) . #s(avl-tree- [[nil nil #3=(headline (:raw-value #1="LSP Clean" :begin 1 :end 964 :pre-blank 0 :contents-begin 13 :contents-end 964 :robust-begin 15 :robust-end 962 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1 :title #1# :mode first-section :granularity element :cached t :parent #2=(org-data (:begin 1 :contents-begin 1 :contents-end 964 :end 964 :robust-begin 3 :robust-end 962 :post-blank 0 :post-affiliated 1 :path "/Users/macpc/.emacs.d/config/programming-modes.org" :mode org-data :CATEGORY "programming-modes" :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[nil nil #2# 0] [nil nil #4=(section (:begin 13 :end 964 :contents-begin 13 :contents-end 964 :robust-begin 13 :robust-end 962 :post-blank 0 :post-affiliated 13 :mode section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #3# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 135 :end 214 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\11(setq byte-compile-warnings '(cl-functions))\12" :post-blank 0 :post-affiliated 135 :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 251 :end 784 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\11(let* ((pkg-list '(lsp-mode lsp-ui lsp-java lsp-python-ms lsp-haskell helm-lsp lsp-treemacs dap-mode lsp-origami lsp-dart company flycheck lsp-pyright\12\11\11\11\11\11\11\11\11\11\11\11\11\11\11;; modes\12\11\11\11\11\11\11\11\11\11\11\11\11\11\11rust-mode php-mode scala-mode dart-mode clojure-mode typescript-mode csharp-mode gdscript-mode)))\12\12\11(mapc (lambda (pkg)\12\11\11\11\11\11(unless (package-installed-p pkg)\12\11\11\11\11\11\11(package-install pkg))\12\11\11\11\11\11(require pkg))\12\11\11\11\11pkg-list)\12\12\11;; Add hooks\12\11(add-hook 'rust-mode-hook 'lsp)\12\11(add-hook 'javascript-mode-hook 'lsp))\12\12" :post-blank 0 :post-affiliated 251 :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 804 :end 964 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\11(add-hook 'rust-mode-hook (lambda () (setq tab-width 4)))\12\11(add-hook 'rust-mode-hook (lambda () (setq indent-tabs-mode nil)))\12" :post-blank 0 :post-affiliated 804 :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] (plain-list (:type unordered :begin 784 :end 804 :contents-begin 784 :contents-end 804 :structure ((784 2 "- " nil nil nil 804)) :post-blank 0 :post-affiliated 784 :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] (plain-list (:type unordered :begin 214 :end 251 :contents-begin 214 :contents-end 251 :structure ((214 2 "- " nil nil nil 251)) :post-blank 0 :post-affiliated 214 :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 1] (plain-list (:type unordered :begin 13 :end 135 :contents-begin 13 :contents-end 135 :structure ((13 0 "- " nil nil nil 135) (55 2 "- " nil nil nil 95) (95 2 "- " nil nil nil 135)) :post-blank 0 :post-affiliated 13 :mode planning :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 1] nil nil 0] org-element--cache-compare)))